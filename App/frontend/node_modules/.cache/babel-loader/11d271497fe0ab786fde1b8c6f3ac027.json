{"ast":null,"code":"var _jsxFileName = \"/home/edinelson/Documentos/Projetos/teste-fullstack-node-react/App/frontend/src/components/Buscar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport lupaImg from \"../../assets/lupa.png\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Buscar() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    let campoFiltro = document.querySelector(\"#buscar\");\n    campoFiltro.addEventListener(\"input\", function () {\n      let cards = document.querySelectorAll(\".card\");\n\n      if (this.value.length > 0) {\n        for (let i = 0; i < cards.length; i++) {\n          let card = cards[i];\n          let marcaCarro = card.querySelector(\".veiculo\");\n          let marca = marcaCarro.textContent;\n          let nomeCarro = card.querySelector(\".title-card\");\n          let nome = nomeCarro.textContent;\n          let anoCarro = card.querySelector(\".ano\");\n          let ano = anoCarro.textContent;\n          let expressao = new RegExp(this.value, \"i\");\n\n          if (!expressao.test(nome) && !expressao.test(marca) && !expressao.test(ano)) {\n            marcaCarro.style.fontSize = \"0\";\n            nomeCarro.style.fontSize = \"0\";\n            anoCarro.style.fontSize = \"0\";\n            card.querySelector(\".img\").style.display = \"none\";\n            card.style.height = \"0\";\n            card.style.padding = \"0\";\n            card.style.margin = \"0\";\n            card.style.transform = \"translateX(-600px)\";\n            card.style.transition = \"all 700ms\";\n          } else {\n            marcaCarro.style.fontSize = \"\";\n            nomeCarro.style.fontSize = \"\";\n            anoCarro.style.fontSize = \"\";\n            card.querySelector(\".img\").style.display = \"\";\n            card.style.height = \"\";\n            card.style.padding = \"\";\n            card.style.margin = \"\";\n            card.style.transform = \"\";\n          }\n        }\n      } else {\n        for (let i = 0; i < cards.length; i++) {\n          let card = cards[i];\n          card.querySelector(\".veiculo\").style.fontSize = \"\";\n          card.querySelector(\".title-card\").style.fontSize = \"\";\n          card.querySelector(\".ano\").style.fontSize = \"\";\n          card.querySelector(\".img\").style.display = \"\";\n          card.style.height = \"\";\n          card.style.padding = \"\";\n          card.style.margin = \"\";\n          card.style.transform = \"\";\n        }\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"buscar\",\n      id: \"buscar\",\n      placeholder: \"BUSCA por um ve\\xEDculo\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"labelCheck\",\n      htmlFor: \"checkbox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: lupaImg,\n        alt: \"imagem de lupa de pesquisa\",\n        className: \"lupa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Buscar, \"8/j/U2Dmu444I+OEOdr+aVI5ADc=\");\n\n_c = Buscar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buscar\");","map":{"version":3,"sources":["/home/edinelson/Documentos/Projetos/teste-fullstack-node-react/App/frontend/src/components/Buscar/index.jsx"],"names":["useEffect","useState","lupaImg","Buscar","value","setValue","campoFiltro","document","querySelector","addEventListener","cards","querySelectorAll","length","i","card","marcaCarro","marca","textContent","nomeCarro","nome","anoCarro","ano","expressao","RegExp","test","style","fontSize","display","height","padding","margin","transform","transition","e","target"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport lupaImg from \"../../assets/lupa.png\";\n\nimport \"./index.css\";\n\nexport default function Buscar() {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    let campoFiltro = document.querySelector(\"#buscar\");\n\n    campoFiltro.addEventListener(\"input\", function () {\n      let cards = document.querySelectorAll(\".card\");\n\n      if (this.value.length > 0) {\n        for (let i = 0; i < cards.length; i++) {\n          let card = cards[i];\n          let marcaCarro = card.querySelector(\".veiculo\");\n          let marca = marcaCarro.textContent;\n\n          let nomeCarro = card.querySelector(\".title-card\");\n          let nome = nomeCarro.textContent;\n\n          let anoCarro = card.querySelector(\".ano\");\n          let ano = anoCarro.textContent;\n\n          let expressao = new RegExp(this.value, \"i\");\n\n          if (\n            !expressao.test(nome) &&\n            !expressao.test(marca) &&\n            !expressao.test(ano)\n          ) {\n            marcaCarro.style.fontSize = \"0\";\n            nomeCarro.style.fontSize = \"0\";\n            anoCarro.style.fontSize = \"0\";\n            card.querySelector(\".img\").style.display = \"none\";\n\n            card.style.height = \"0\";\n            card.style.padding = \"0\";\n            card.style.margin = \"0\";\n            card.style.transform = \"translateX(-600px)\";\n            card.style.transition = \"all 700ms\";\n          } else {\n            marcaCarro.style.fontSize = \"\";\n            nomeCarro.style.fontSize = \"\";\n            anoCarro.style.fontSize = \"\";\n            card.querySelector(\".img\").style.display = \"\";\n\n            card.style.height = \"\";\n            card.style.padding = \"\";\n            card.style.margin = \"\";\n            card.style.transform = \"\";\n          }\n        }\n      } else {\n        for (let i = 0; i < cards.length; i++) {\n          let card = cards[i];\n          card.querySelector(\".veiculo\").style.fontSize = \"\";\n          card.querySelector(\".title-card\").style.fontSize = \"\";\n          card.querySelector(\".ano\").style.fontSize = \"\";\n          card.querySelector(\".img\").style.display = \"\";\n\n          card.style.height = \"\";\n          card.style.padding = \"\";\n          card.style.margin = \"\";\n          card.style.transform = \"\";\n        }\n      }\n    });\n  });\n\n  return (\n    <>\n      <input type=\"checkbox\" id=\"checkbox\" />\n      <input\n        type=\"text\"\n        name=\"buscar\"\n        id=\"buscar\"\n        placeholder=\"BUSCA por um veículo\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <label id=\"labelCheck\" htmlFor=\"checkbox\">\n        <img src={lupaImg} alt=\"imagem de lupa de pesquisa\" className=\"lupa\" />\n      </label>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}